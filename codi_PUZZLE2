import gi
import threading
import time
from puzzle1 import NFCReader  

gi.require_version('Gtk', '3.0')
from gi.repository import Gtk, GLib

class RFIDReaderApp(Gtk.Window):
    def __init__(self):
        Gtk.Window.__init__(self, title="RFID Reader")
        self.set_border_width(10)
        self.set_default_size(400, 200)

        vbox = Gtk.Box(orientation=Gtk.Orientation.VERTICAL, spacing=6)
        self.add(vbox)

        self.label = Gtk.Label(label="Escaneja la targeta UPC per fer login")
        vbox.pack_start(self.label, True, True, 0)

        self.textview = Gtk.TextView()
        self.textview.set_editable(False)
        self.textbuffer = self.textview.get_buffer()
        vbox.pack_start(self.textview, True, True, 0)

        self.clear_button = Gtk.Button(label="Clear")
        self.clear_button.connect("clicked", self.on_clear_clicked)
        vbox.pack_start(self.clear_button, True, True, 0)

        self.display_button = Gtk.Button(label="Display")
        self.display_button.connect("clicked", self.on_display_clicked)
        vbox.pack_start(self.display_button, True, True, 0)

        self.nfc_reader = NFCReader(debug=False)

        self.thread = threading.Thread(target=self.read_rfid_thread, daemon=True)
        self.thread.start()

    def on_clear_clicked(self, widget):
        self.textbuffer.set_text("")

    def on_display_clicked(self, widget):
        self.textbuffer.set_text("Esperant targeta...")

    def read_rfid_thread(self):
	uid_hex=None
        while True:
            uid_hex = self.nfc_reader.read_uid()  
            if uid_hex is not None:
                GLib.idle_add(self.update_textview, uid_hex) 
 time.sleep(1)  

    def update_textview(self, uid_hex):
        self.textbuffer.set_text(f"UID de la tarjeta: {uid_hex}")
        return False 

def main():
    app = RFIDReaderApp() 
    app.connect("destroy", Gtk.main_quit)
    app.show_all()
    Gtk.main()

if __name__ == "__main__":
    main()
